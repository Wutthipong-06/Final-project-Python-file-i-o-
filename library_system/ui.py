"""
‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (User Interface)
"""
import datetime
from typing import Optional
from config import Config
from utils import decode_string
from book_manager import BookManager
from member_manager import MemberManager
from borrow_manager import BorrowManager

class LibraryUI:
    def __init__(self, book_mgr: BookManager, member_mgr: MemberManager, borrow_mgr: BorrowManager):
        self.book_mgr = book_mgr
        self.member_mgr = member_mgr
        self.borrow_mgr = borrow_mgr
        self.operation_history = []
    
    def show_main_menu(self):
        """‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å"""
        print("\n" + "=" * 60)
        print("‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î (Library Management System)")
        print("=" * 60)
        print("1. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
        print("2. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å")
        print("3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°-‡∏Ñ‡∏∑‡∏ô")
        print("4. ‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥")
        print("0. ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö")
        print("-" * 60)
    
    def add_book_ui(self):
        """UI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠"""
        print("\n=== ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ===")
        try:
            title = input("‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠: ").strip()
            if not title:
                print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
                return
            
            author = input("‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á: ").strip()
            if not author:
                print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á")
                return
            
            isbn = input("ISBN: ").strip()
            year_str = input("‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå: ").strip()
            
            year = int(year_str)
            if year < 1000 or year > 9999:
                print("‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 4 ‡∏´‡∏•‡∏±‡∏Å")
                return
            
            book_id = self.book_mgr.add_book(title, author, isbn, year)
            print(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ID: {book_id}")
            self.operation_history.append(f"{datetime.datetime.now()}: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ '{title}' ID: {book_id}")
            
        except ValueError:
            print("‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        except Exception as e:
            print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def borrow_books_ui(self):
        """UI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏∑‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠"""
        print("\n=== ‡∏¢‡∏∑‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ===")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
        banned_list = self.borrow_mgr.check_and_ban_overdue_members()
        if banned_list:
            print(f"‚ö†Ô∏è  ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å {len(banned_list)} ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∑‡∏ô")
        
        try:
            num_books = int(input("\n‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏Å‡∏µ‡πà‡πÄ‡∏•‡πà‡∏°? (1-10): ").strip())
            if num_books < 1 or num_books > Config.MAX_BORROW_BOOKS:
                print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 1-10 ‡πÄ‡∏•‡πà‡∏°")
                return
            
            member_id = input("‡∏Å‡∏£‡∏≠‡∏Å ID ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: ").strip()
            member = self.member_mgr.find_member_by_id(member_id)
            
            if not member:
                print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å")
                return
            
            if member[5] == Config.STATUS_SUSPENDED:
                print("=" * 60)
                print("üö´ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô!")
                print(f"‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: {decode_string(member[1])} (ID: {member_id})")
                print("‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
                print("\n‚ö†Ô∏è  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô")
                print("=" * 60)
                return
            
            print(f"\n‚úì ‡∏ú‡∏π‡πâ‡∏¢‡∏∑‡∏°: {decode_string(member[1])} (ID: {member_id})")
            print(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡∏∑‡∏°: {num_books} ‡πÄ‡∏•‡πà‡∏°")
            print("-" * 60)
            
            borrowed_books = []
            borrow_date = datetime.date.today()
            due_date = borrow_date + datetime.timedelta(days=Config.DUE_DAYS)
            
            for i in range(1, num_books + 1):
                print(f"\nüìñ ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏µ‡πà {i}/{num_books}")
                book_id = input(f"‡∏Å‡∏£‡∏≠‡∏Å ID ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠: ").strip()
                
                book = self.book_mgr.find_book_by_id(book_id)
                if not book:
                    print(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ID: {book_id}")
                    continue
                
                if book[5] != Config.STATUS_ACTIVE:
                    print(f"‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ '{decode_string(book[1])}' ‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏°‡πÅ‡∏•‡πâ‡∏ß")
                    continue
                
                if book_id in borrowed_books:
                    print("‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏•‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
                    continue
                
                borrow_id = self.borrow_mgr.add_borrow(book_id, member_id)
                borrowed_books.append(book_id)
                print(f"‚úì ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ID: {borrow_id}")
            
            if borrowed_books:
                print("\n" + "=" * 60)
                print("üìö ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
                print("=" * 60)
                print(f"‡∏ú‡∏π‡πâ‡∏¢‡∏∑‡∏°: {decode_string(member[1])}")
                print(f"ID ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: {member_id}")
                print(f"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°: {borrow_date.strftime('%Y-%m-%d')}")
                print(f"‚è∞ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∑‡∏ô: {due_date.strftime('%Y-%m-%d')}")
                print(f"\n‡∏¢‡∏∑‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à {len(borrowed_books)} ‡πÄ‡∏•‡πà‡∏°")
                print("\n‚ö†Ô∏è  ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:")
                print(f"‚Ä¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏†‡∏≤‡∏¢‡πÉ‡∏ô {Config.DUE_DAYS} ‡∏ß‡∏±‡∏ô")
                print("‚Ä¢ ‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î ID ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
                print("=" * 60)
                
                self.operation_history.append(
                    f"{datetime.datetime.now()}: ‡∏¢‡∏∑‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ {len(borrowed_books)} ‡πÄ‡∏•‡πà‡∏° ‡πÇ‡∏î‡∏¢‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ID: {member_id}"
                )
        
        except ValueError:
            print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        except Exception as e:
            print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def return_book_ui(self):
        """UI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠"""
        print("\n=== ‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ===")
        try:
            book_id = input("‡∏Å‡∏£‡∏≠‡∏Å ID ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Ñ‡∏∑‡∏ô: ").strip()
            
            success = self.borrow_mgr.return_book(book_id)
            if success:
                print("‚úì ‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                self.operation_history.append(f"{datetime.datetime.now()}: ‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ID: {book_id}")
            else:
                print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
        
        except Exception as e:
            print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    
    def run(self):
        """‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö"""
        print("‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î")
        
        while True:
            try:
                self.show_main_menu()
                choice = input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π (0-4): ").strip()
                
                if choice == '1':
                    self.add_book_ui()
                elif choice == '2':
                    pass  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
                elif choice == '3':
                    print("\n1. ‡∏¢‡∏∑‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
                    print("2. ‡∏Ñ‡∏∑‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
                    sub_choice = input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ").strip()
                    if sub_choice == '1':
                        self.borrow_books_ui()
                    elif sub_choice == '2':
                        self.return_book_ui()
                elif choice == '0':
                    print("‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£!")
                    break
                else:
                    print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
            
            except KeyboardInterrupt:
                print("\n\n‡∏£‡∏∞‡∏ö‡∏ö‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
                break
            except Exception as e:
                print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")